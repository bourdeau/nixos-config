;; ------------------------------
;; Vars & polls
;; ------------------------------

(defvar workspaces "[1,2,3,4,5,6,7,8,9]")

(defpoll active_workspace :interval "2s"
  "hyprctl activeworkspace | grep -oP '(?<=ID )\\d+'")

(defpoll time :interval "10s" "date '+%d/%m/%Y %H:%M'")
(defpoll volume :interval "2s" "pamixer --get-volume")
(defpoll network :interval "10s"
  "nmcli -t -f TYPE,STATE,CONNECTION dev | awk -F: '/wifi:connected/{print $3; exit} /ethernet:connected/{print $3; exit} END{print \"offline\"}'")
(defpoll battery :interval "30s" "cat /sys/class/power_supply/BAT0/capacity || echo 100")

;; ------------------------------
;; Widgets
;; ------------------------------

(defwidget bar []
  (box :orientation "h" :halign "fill" :hexpand true
    ;; left side
    (workspaces)

    ;; expand middle empty space
    (box :hexpand true)

    ;; right side
    (box :orientation "h" :halign "end"
      (sysinfo)
      (clock-widget))))

(defwidget workspaces []
  (box :class "workspaces" :orientation "h"
    (for i in workspaces
      (button
        :class {i == active_workspace ? "active" : ""}
        :onclick { "hyprctl dispatch workspace " + i }
        i))))

(defwidget sysinfo []
  (box :class "sysinfo" :orientation "h"
    (label :text "ï‡«" :tooltip network :class "net")
    (label :text { "ï€¨ " + volume + "%" } :class "vol")
    (label :text { "ðŸ”‹" + battery + "%" } :class "bat")))

(defwidget clock-widget []
  (button :class "clock"
          :onclick "eww open --toggle control_center"
          time))

(defwidget control []
  (box :orientation "v" :class "control-center"
    (label :text { "ðŸ”Š Volume:" + volume + "%" })
    (label :text { "ï‡« Wi-Fi:" + network })
    (label :text "ï„° Mic: on")
    (label :text time)))

;; ------------------------------
;; Windows
;; ------------------------------

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :exclusive true
  :geometry (geometry :x "0%" :y "0%" :width "100%" :height "30px" :anchor "top center")
  :reserve (struts :side "top" :distance "30px")
  (bar))

(defwindow control_center
  :monitor 0
  :geometry (geometry :x "100%" :y "30px" :width "250px" :anchor "top right")
  :stacking "fg"
  (control))
